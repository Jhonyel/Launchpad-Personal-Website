// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  GUEST
}

model User {
  id           String @id @default(uuid())
  username     String
  email        String
  role         Role   @default(GUEST)
  title        String
  bio          String
  imageUrl     String
  githubLink   String
  LinkedInLink String

  createdProjects   Project[]    @relation(name: "userCreated")
  deletedProjects   Project[]    @relation(name: "userDeleted")
  createdExperience Experience[] @relation(name: "userCreated")
  deletedExperience Experience[] @relation(name: "userDeleted")
}

model Project {
  id            String    @id @default(uuid())
  title         String
  description   String
  imageUrls     String[]
  skills        String[]
  githubUrl     String
  dateCreated   DateTime  @default(now())
  dateDeleted   DateTime?
  userCreatedId String
  userCreated   User      @relation(name: "userCreated", fields: [userCreatedId], references: [id])
  userDeletedId String?
  userDeleted   User?     @relation(name: "userDeleted", fields: [userDeletedId], references: [id])
}

model Experience {
  id            String    @id @default(uuid())
  title         String
  description   String
  companyName   String
  location      String
  imageUrl      String[]
  startDate     DateTime
  endDate       DateTime
  dateCreated   DateTime  @default(now())
  dateDeleted   DateTime?
  userCreatedId String
  userCreated   User      @relation(name: "userCreated", fields: [userCreatedId], references: [id])
  userDeletedId String?
  userDeleted   User?     @relation(name: "userDeleted", fields: [userDeletedId], references: [id])
}
